{
    "swagger": "2.0",
    "info": {
        "description": "day-planner-gpt-data-portal",
        "title": "Fiber Example API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Algo7",
            "email": "tools@algo7.tools"
        },
        "license": {
            "name": "The GNU General Public License v3.0",
            "url": "https://raw.githubusercontent.com/algo7/day-planner-gpt-data-portal/main/LICENSE"
        },
        "version": "1.0"
    },
    "host": "NONE",
    "basePath": "/",
    "paths": {
        "/": {
            "get": {
                "description": "Returns the home page of the application.",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Pages"
                ],
                "summary": "Home Page",
                "responses": {
                    "200": {
                        "description": "Hello, World!",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/apikey": {
            "get": {
                "description": "Returns a page to get the initial API key. If the initial password has expired, it redirects to the home page.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Get API Key Page",
                "responses": {
                    "200": {
                        "description": "Render the API key form page",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "302": {
                        "description": "Redirect to the home page if the initial password has expired",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error getting initial password from Redis",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Generates a new API key and stores it in Redis with a TTL of 7 days. If the initial password has expired, it redirects to the home page.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Generate API Key",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Password for API key generation",
                        "name": "password",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "API key: {apiKey}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "302": {
                        "description": "Redirect to the home page if the initial password has expired",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Incorrect password",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error getting initial password or generating API key",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/google": {
            "get": {
                "description": "Retrieves emails from the user's Gmail account.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Emails"
                ],
                "summary": "Get Gmail Emails",
                "responses": {
                    "200": {
                        "description": "List of Gmail emails",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/gmail.Email"
                            }
                        }
                    },
                    "302": {
                        "description": "Redirect to Google authentication if the access token is missing or invalid",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Unable to retrieve emails due to server error or token retrieval issue",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/google/auth": {
            "get": {
                "description": "Redirects to the Google OAuth2 authentication page.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OAuth2"
                ],
                "summary": "OAuth2 Redirect for Google",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization code from Google OAuth2 provider",
                        "name": "code",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "302": {
                        "description": "Redirect to a predefined route after successful authorization",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "No authorization code found in the request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error loading OAuth2 config or exchanging code for token",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/google/oauth_redirect": {
            "get": {
                "description": "Handles the callback from Google OAuth2 authentication, exchanging the authorization code for an access token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OAuth2"
                ],
                "summary": "OAuth2 Redirect for Google",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization code from Google OAuth2 provider",
                        "name": "code",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "302": {
                        "description": "Redirect to a predefined route after successful authorization",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "No authorization code found in the request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Unable to read client secret file or parse it to config",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/outlook": {
            "get": {
                "description": "Retrieves emails from the user's Outlook account.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Emails"
                ],
                "summary": "Get Outlook Emails",
                "responses": {
                    "200": {
                        "description": "List of Outlook emails",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/outlook.Email"
                            }
                        }
                    },
                    "302": {
                        "description": "Redirect to Outlook authentication if the access token is missing or invalid",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Unable to retrieve emails due to server error or token retrieval issue",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/outlook/auth": {
            "get": {
                "description": "Redirects to the Outlook OAuth2 authentication page.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OAuth2"
                ],
                "summary": "Get Outlook Auth Page",
                "responses": {
                    "302": {
                        "description": "Redirect to the Outlook OAuth2 authentication page.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error loading OAuth2 config",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/outlook/oauth_redirect": {
            "get": {
                "description": "Handles the callback from Outlook OAuth2 authentication, exchanging the authorization code for an access token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OAuth2"
                ],
                "summary": "OAuth2 Redirect for Outlook",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization code from Outlook OAuth2 provider",
                        "name": "code",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "302": {
                        "description": "Redirect to a predefined route after successful authorization",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "No authorization code found in the request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error loading OAuth2 config or exchanging code for token",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "gmail.Email": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "string"
                },
                "recievedDateTime": {
                    "type": "string"
                },
                "sender": {
                    "type": "string"
                },
                "subject": {
                    "type": "string"
                }
            }
        },
        "outlook.Email": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "string"
                },
                "recievedDateTime": {
                    "type": "string"
                },
                "sender": {
                    "type": "string"
                },
                "subject": {
                    "type": "string"
                }
            }
        }
    }
}