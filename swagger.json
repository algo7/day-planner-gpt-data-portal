{
    "swagger": "2.0",
    "info": {
        "description": "day-planner-gpt-data-portal",
        "title": "Day Planner GPT Data Portal API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Algo7",
            "email": "tools@algo7.tools"
        },
        "license": {
            "name": "The GNU General Public License v3.0",
            "url": "https://raw.githubusercontent.com/algo7/day-planner-gpt-data-portal/main/LICENSE"
        },
        "version": "1.0"
    },
    "host": "gptportal.algo7.tools",
    "basePath": "/",
    "paths": {
        "/": {
            "get": {
                "description": "This endpoint returns a welcome message.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Home"
                ],
                "summary": "Get Home",
                "responses": {
                    "200": {
                        "description": "Returns a welcome message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/auth/internal/apikey": {
            "get": {
                "description": "This endpoint checks if the initial password exists in Redis and if it does, renders the API key form. If the initial password does not exist or has been used, it redirects to the home page or prompts the user to restart the server.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Get API Key",
                "responses": {
                    "200": {
                        "description": "Renders the API key form if the initial password exists and has not been used",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "307": {
                        "description": "Redirects to the home page if the initial password has been used",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Returns an error message if the initial password does not exist or there was an error getting the initial password",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "This endpoint checks if the initial password exists in Redis, compares it with the password from the form, generates an API key if the passwords match, saves the API key in Redis with a TTL of 7 days, and sets the initial password to an empty string.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Post API Key",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Password from the form",
                        "name": "password",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the generated API key",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Returns an error message if the password from the form does not match the initial password",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Returns an error message if the initial password does not exist, there was an error getting the initial password, generating the API key, saving the API key, or deleting the initial password",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/auth/oauth": {
            "get": {
                "description": "This endpoint generates the OAuth2 authentication URL for the specified provider.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OAuth2"
                ],
                "summary": "Get OAuth2 Authentication URL",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the OAuth2 provider to generate the authentication URL for",
                        "name": "provider",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a message with the URL to visit to authorize the application",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Returns an error message if the provided OAuth2 provider is invalid",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Returns an error message if there was an error loading the OAuth2 configuration or generating the OAuth2 URL",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/auth/oauth/callback": {
            "get": {
                "description": "This endpoint handles the callback from the OAuth2 provider, exchanges the authorization code for an access token, and saves the token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OAuth2"
                ],
                "summary": "OAuth2 Callback Endpoint",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization code returned by the OAuth2 provider",
                        "name": "code",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "State token for CSRF protection",
                        "name": "state",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "307": {
                        "description": "Redirects to the OAuth success route on successful token exchange and save",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Returns an error message if the authorization code or state token is missing or invalid, or if the OAuth2 provider is invalid",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Returns an error message if there was an error getting the OAuth2 configuration, exchanging the code for a token, or saving the token",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/auth/oauth/refresh": {
            "get": {
                "description": "This endpoint retrieves a new access token using the refresh token for the specified provider.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OAuth2"
                ],
                "summary": "Get New Token From Refresh Token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the OAuth2 provider to get the new access token for",
                        "name": "provider",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "307": {
                        "description": "Redirects to the OAuth success route on successful token retrieval and update",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Returns an error message if the provided OAuth2 provider is invalid",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Returns an error message if there was an error getting the OAuth2 configuration, retrieving the token, getting the new token from the refresh token, or updating the token",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/auth/success": {
            "get": {
                "description": "This endpoint returns a success message after successful authentication.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OAuth2"
                ],
                "summary": "OAuth2 Success Page",
                "responses": {
                    "200": {
                        "description": "Returns a success message indicating successful authentication",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/email/gmail": {
            "get": {
                "description": "This endpoint retrieves emails from Gmail. If there is an error, it redirects to the Google authentication route or returns a server error.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Email"
                ],
                "summary": "Get Gmail Emails",
                "responses": {
                    "200": {
                        "description": "Returns the retrieved emails",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "307": {
                        "description": "Redirects to the Google authentication route if the access token is not found in Redis or there is a non-Redis related error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Returns an error message if there is a Redis related error that is not due to the token key not being found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/email/outlook": {
            "get": {
                "description": "This endpoint retrieves emails from Outlook. If there is an error, it redirects to the Outlook authentication route or returns a server error.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Email"
                ],
                "summary": "Get Outlook Emails",
                "responses": {
                    "200": {
                        "description": "Returns the retrieved emails",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "307": {
                        "description": "Redirects to the Outlook authentication route if the access token is not found in Redis or there is a non-Redis related error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Returns an error message if there is a Redis related error that is not due to the token key not being found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    }
}